{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\blog-project\\\\blog-project\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n\n// keep track of previous scroll position\nlet prevScrollPos = window.pageYOffset;\nwindow.addEventListener('scroll', function () {\n  // current scroll position\n  const currentScrollPos = window.pageYOffset;\n  if (prevScrollPos > currentScrollPos) {\n    // user has scrolled up\n    document.querySelector('.navbar').classList.add('show');\n  } else {\n    // user has scrolled down\n    document.querySelector('.navbar').classList.remove('show');\n  }\n\n  // update previous scroll position\n  prevScrollPos = currentScrollPos;\n});","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","prevScrollPos","window","pageYOffset","addEventListener","currentScrollPos","querySelector","classList","add","remove"],"sources":["C:/Users/ASUS/Documents/blog-project/blog-project/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n// keep track of previous scroll position\nlet prevScrollPos = window.pageYOffset;\n\nwindow.addEventListener('scroll', function() {\n  // current scroll position\n  const currentScrollPos = window.pageYOffset;\n\n  if (prevScrollPos > currentScrollPos) {\n    // user has scrolled up\n    document.querySelector('.navbar').classList.add('show');\n  } else {\n    // user has scrolled down\n    document.querySelector('.navbar').classList.remove('show');\n  }\n\n  // update previous scroll position\n  prevScrollPos = currentScrollPos;\n});\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAAQC,aAAa,QAAO,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACjBP,OAAA,CAACH,aAAa;IAAAU,QAAA,eACdP,OAAA,CAACF,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACE,CACpB,CAAC;;AAGD;AACA,IAAIC,aAAa,GAAGC,MAAM,CAACC,WAAW;AAEtCD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAE,YAAW;EAC3C;EACA,MAAMC,gBAAgB,GAAGH,MAAM,CAACC,WAAW;EAE3C,IAAIF,aAAa,GAAGI,gBAAgB,EAAE;IACpC;IACAb,QAAQ,CAACc,aAAa,CAAC,SAAS,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EACzD,CAAC,MAAM;IACL;IACAhB,QAAQ,CAACc,aAAa,CAAC,SAAS,CAAC,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;EAC5D;;EAEA;EACAR,aAAa,GAAGI,gBAAgB;AAClC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}